{"version":3,"sources":["assets/sounds/buzzer.mp3","assets/sounds/cheers1.mp3","logo.svg","Addition.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","objEmojis","buzzer","UIFx","buzzerAudio","volume","throttleMs","cheer","cheerAudio","Score","props","style","fontSize","color","score","nq","AnswerStatus","isCorrect","text","DisplayObjects","e","n1","n2","str1","String","fromCodePoint","repeat","str2","concat","getEmojiString","emoji","AddQuestion","c","getRandomNum","l","u","Math","floor","random","Game","state","emojiIndex","length","num1","num2","answer","answerStatusText","numQuestions","handleAnswerChange","bind","handleAnswerSubmit","generateNewQuestion","this","nameInput","focus","setState","mscore","play","event","target","value","autoFocus","type","maxLength","size","onChange","ref","input","onClick","disabled","React","Component","NameForm","isInitialized","handleChange","handleSubmit","preventDefault","onSubmit","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9ae83ec4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/buzzer.bba88b52.mp3\";","module.exports = __webpack_public_path__ + \"static/media/cheers1.8059c7c9.mp3\";","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","\r\nimport React from 'react';\r\nimport UIFx from 'uifx';\r\nimport buzzerAudio from './assets/sounds/buzzer.mp3';\r\nimport cheerAudio from './assets/sounds/cheers1.mp3';\r\n/* Both the audio clips are from https://freesfx.co.uk/ */\r\n\r\nconst lb = 1;\r\nconst ub = 5;\r\nconst correctAnswerEmoji=\"0x1F913\";\r\nconst wrongAnswerEmoji=\"0x1F62D\";\r\nconst objEmojis = [\"0x1F408\",\"0x1F9AE\",\"0x1F404\",\"0x1F416\",\"0x1F411\",\"0x1F42A\", \"0x1F992\", \"0x1F418\", \"0x1F98F\", \"0x1F400\", \"0x1F407\", \"0x1F43F\", \"0x1F987\", \"0x1F998\"]\r\n\r\n\r\n\r\nconst buzzer = new UIFx(\r\n\t  buzzerAudio,\r\n\t  {\r\n\t\t      volume: 0.4, // number between 0.0 ~ 1.0\r\n\t\t      throttleMs: 100\r\n\t\t    }\r\n)\r\nconst cheer = new UIFx(\r\n\t  cheerAudio,\r\n\t  {\r\n\t\t      volume: 0.4, // number between 0.0 ~ 1.0\r\n\t\t      throttleMs: 100\r\n\t\t    }\r\n)\r\n\r\nfunction Score(props)\r\n{\r\n  return(<text style={{fontSize:40}}> Your score is : <span style={{color:'blue'}}>{props.score}/{props.nq}</span> </text>);\r\n  \r\n}\r\nfunction AnswerStatus(props)\r\n{\r\n  let c;\r\n  let fsize={fontSize:40};\r\n  if(props.isCorrect)\r\n    {\r\n      c = {color:'green'};\r\n      \r\n    }\r\n  else\r\n    {\r\n      c={color:'red'};\r\n      \r\n    }\r\n  return(<text style={c,fsize}> {props.text} </text>);\r\n}\r\n\r\nfunction getEmojiString(e,n1,n2)\r\n{\r\n\tvar str1 = String.fromCodePoint(e).repeat(n1);\r\n\tvar str2 = String.fromCodePoint(e).repeat(n2);\r\n\treturn str1.concat(\"+\",str2);\r\n}\r\n\r\nfunction DisplayObjects(props)\r\n{\r\n let fsize={fontSize:40}; \r\n  return (<text style={fsize}> {getEmojiString(props.emoji,props.n1,props.n2)} </text>);\r\n}\r\n\r\nfunction AddQuestion(props)\r\n{\r\n \r\n let c; \r\n let fsize={fontSize:40}; \r\n      c={color:'magenta'};\r\n      \r\n  return (<text style={fsize}> What is  <span style={c}>{props.n1} </span> + <span style={c}> {props.n2} </span>?\r\n      </text>);\r\n      \r\n    \r\n}\r\n\r\n\r\nfunction getRandomNum(l, u)\r\n{\r\n\treturn Math.floor(Math.random()*u+l);\r\n}\r\n\r\nclass Game extends React.Component\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state={emojiIndex: objEmojis[Math.floor(Math.random()*objEmojis.length)], num1: getRandomNum(lb,ub), num2: getRandomNum(lb,ub), answer:'', isCorrect:false, answerStatusText:'',score: 0,numQuestions: 1,}\r\n    this.handleAnswerChange=this.handleAnswerChange.bind(this);\r\n    this.handleAnswerSubmit=this.handleAnswerSubmit.bind(this);\r\n    this.generateNewQuestion=this.generateNewQuestion.bind(this);\r\n  };\r\n  \r\n  componentDidMount(){\r\n    this.nameInput.focus();\r\n  }\r\n  componentDidUpdate(){\r\n    this.nameInput.focus();\r\n  }\r\n  generateNewQuestion()\r\n  {\r\n    const nq = this.state.numQuestions+1;\r\n    let n1 = getRandomNum(lb,ub);\r\n    let n2 = getRandomNum(lb,ub);\r\n\t  let emoji = objEmojis[Math.floor(Math.random()*objEmojis.length)];\r\n    this.setState({emojiIndex: emoji, num1: n1, num2: n2,answerStatusText:'',answer:'', isCorrect: false,numQuestions: nq,});\r\n  }\r\n  handleAnswerSubmit()\r\n  {\r\n    const mscore=this.state.score;\r\n    \r\n\t  if(this.state.answer == (this.state.num1 + this.state.num2))\r\n\t  {\r\n\t\t  this.setState({isCorrect:true,answerStatusText:String.fromCodePoint(\"0x1F913\"), score: mscore+1,});\r\n\t\t  cheer.play();\r\n\t  }\r\n    else {\r\n\t    this.setState({isCorrect:false,answerStatusText:String.fromCodePoint(\"0x1F62D\")});\r\n\t    buzzer.play();\r\n             }\r\n  }\r\n  \r\n  handleAnswerChange(event)\r\n  {\r\n    this.setState({answer:event.target.value});\r\n  }\r\n  \r\n  render()\r\n  {\r\n    return(\r\n      <div>\r\n        <Score score={this.state.score} nq={this.state.numQuestions}/> <br/>\r\n        <AddQuestion n1={this.state.num1} n2={this.state.num2} />\r\n      <input autoFocus style={{fontSize:40}} type=\"text\" maxLength=\"2\" size=\"2\" value={this.state.answer} onChange={this.handleAnswerChange} \r\n        ref={(input) => { this.nameInput = input; }} />\r\n   <AnswerStatus isCorrect={this.state.isCorrect} text={this.state.answerStatusText}/>\r\n        \r\n        <br/>\r\n\t    <DisplayObjects emoji={this.state.emojiIndex} n1={this.state.num1} n2={this.state.num2} /> <br/>\r\n        <button style={{fontSize:40}} onClick={this.handleAnswerSubmit} disabled={this.state.isCorrect}>\r\n          Submit </button>\r\n        <button  style={{fontSize:40}} onClick={this.generateNewQuestion}> Play another </button>\r\n        </div>);\r\n    \r\n  }\r\n  \r\n}\r\n\r\nclass NameForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {value: '', isInitialized: false,};\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({value: event.target.value});\r\n  }\r\n\r\n  handleSubmit(event) {\r\n   // alert('A name was submitted: ' + this.state.value);\r\n    this.setState({isInitialized:true});\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    if(this.state.isInitialized)\r\n      return(\r\n        <div><h1> Hello, {this.state.value}!</h1> \r\n      <Game/></div>);\r\n    else\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name:\r\n          <input type=\"text\" value={this.state.value} onChange={this.handleChange}\r\n            \r\n            />\r\n        </label>\r\n        <input type=\"submit\" value=\"Submit\" />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NameForm;\r\n\r\n/*\r\nReactDOM.render(\r\n  <NameForm />,\r\n  document.getElementById('root')\r\n);\r\n*/\r\n","\r\nimport React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n//import NameForm from './BeforeAfter'\r\nimport NameForm from './Addition'\r\n\r\n/*function App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}*/\r\n\r\nfunction App() {\r\n\r\n\treturn ( <NameForm />);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}